
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftIGUALleftMAYORMENORleftMASMENOSleftMULTIPLICACIONDIVISIONCONSOLE DECIMAL DIVISION ENTERO IGUAL LOG MAS MAYOR MENOR MENOS MULTIPLICACION PARDER PARIZQ PTCOMA PUNTO STRINGinitial : instructionsinstructions : instructions instruction\n                    | instruction\n    instruction : consoleLog \n    consoleLog : CONSOLE PUNTO LOG PARIZQ exp PARDER PTCOMA\n    exp  : exp MAS exp\n            | exp MENOS exp\n            | exp MULTIPLICACION exp\n            | exp DIVISION exp\n            | exp MAYOR exp\n            | exp MENOR exp\n            | exp IGUAL exp\n    exp : PARIZQ exp PARDERexp  : ENTERO\n    exp  : DECIMAL\n    exp  : STRING\n    '
    
_lr_action_items = {'CONSOLE':([0,2,3,4,6,25,],[5,5,-3,-4,-2,-5,]),'$end':([1,2,3,4,6,25,],[0,-1,-3,-4,-2,-5,]),'PUNTO':([5,],[7,]),'LOG':([7,],[8,]),'PARIZQ':([8,9,10,17,18,19,20,21,22,23,],[9,10,10,10,10,10,10,10,10,10,]),'ENTERO':([9,10,17,18,19,20,21,22,23,],[12,12,12,12,12,12,12,12,12,]),'DECIMAL':([9,10,17,18,19,20,21,22,23,],[13,13,13,13,13,13,13,13,13,]),'STRING':([9,10,17,18,19,20,21,22,23,],[14,14,14,14,14,14,14,14,14,]),'PARDER':([11,12,13,14,15,24,26,27,28,29,30,31,32,],[16,-14,-15,-16,24,-13,-6,-7,-8,-9,-10,-11,-12,]),'MAS':([11,12,13,14,15,24,26,27,28,29,30,31,32,],[17,-14,-15,-16,17,-13,-6,-7,-8,-9,17,17,17,]),'MENOS':([11,12,13,14,15,24,26,27,28,29,30,31,32,],[18,-14,-15,-16,18,-13,-6,-7,-8,-9,18,18,18,]),'MULTIPLICACION':([11,12,13,14,15,24,26,27,28,29,30,31,32,],[19,-14,-15,-16,19,-13,19,19,-8,-9,19,19,19,]),'DIVISION':([11,12,13,14,15,24,26,27,28,29,30,31,32,],[20,-14,-15,-16,20,-13,20,20,-8,-9,20,20,20,]),'MAYOR':([11,12,13,14,15,24,26,27,28,29,30,31,32,],[21,-14,-15,-16,21,-13,-6,-7,-8,-9,-10,-11,21,]),'MENOR':([11,12,13,14,15,24,26,27,28,29,30,31,32,],[22,-14,-15,-16,22,-13,-6,-7,-8,-9,-10,-11,22,]),'IGUAL':([11,12,13,14,15,24,26,27,28,29,30,31,32,],[23,-14,-15,-16,23,-13,-6,-7,-8,-9,-10,-11,-12,]),'PTCOMA':([16,],[25,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'initial':([0,],[1,]),'instructions':([0,],[2,]),'instruction':([0,2,],[3,6,]),'consoleLog':([0,2,],[4,4,]),'exp':([9,10,17,18,19,20,21,22,23,],[11,15,26,27,28,29,30,31,32,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> initial","S'",1,None,None,None),
  ('initial -> instructions','initial',1,'p_initial','Panther.py',86),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','Panther.py',93),
  ('instructions -> instruction','instructions',1,'p_instructions','Panther.py',94),
  ('instruction -> consoleLog','instruction',1,'p_instruction','Panther.py',104),
  ('consoleLog -> CONSOLE PUNTO LOG PARIZQ exp PARDER PTCOMA','consoleLog',7,'p_consoleLog','Panther.py',110),
  ('exp -> exp MAS exp','exp',3,'p_exp_aritmetica','Panther.py',116),
  ('exp -> exp MENOS exp','exp',3,'p_exp_aritmetica','Panther.py',117),
  ('exp -> exp MULTIPLICACION exp','exp',3,'p_exp_aritmetica','Panther.py',118),
  ('exp -> exp DIVISION exp','exp',3,'p_exp_aritmetica','Panther.py',119),
  ('exp -> exp MAYOR exp','exp',3,'p_exp_aritmetica','Panther.py',120),
  ('exp -> exp MENOR exp','exp',3,'p_exp_aritmetica','Panther.py',121),
  ('exp -> exp IGUAL exp','exp',3,'p_exp_aritmetica','Panther.py',122),
  ('exp -> PARIZQ exp PARDER','exp',3,'p_exp_agrupacion','Panther.py',133),
  ('exp -> ENTERO','exp',1,'p_exp_valor_entero','Panther.py',137),
  ('exp -> DECIMAL','exp',1,'p_exp_valor_decimal','Panther.py',142),
  ('exp -> STRING','exp',1,'p_exp_valor_string','Panther.py',147),
]
